@model IEnumerable<POC_New.Models.JOB>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
@{
   ViewBag.Title = "Index";

    var grid = new WebGrid(source: Model, canPage: true, rowsPerPage: 15);
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<div id="gridContent" style="font-family:Arial; padding: 20px;">
    @grid.GetHtml(tableStyle: "webgrid-table",  
    headerStyle: "webgrid-header",
    footerStyle: "webgrid-footer",
    alternatingRowStyle: "webgrid-alternating-row",
    selectedRowStyle: "webgrid-selected-row",
    rowStyle: "webgrid-row-style",
    mode: WebGridPagerModes.NextPrevious,
    columns: grid.Columns(
                grid.Column(columnName:"JOB_ID", header:"Job ID", 
                            format:@<text><span class="display-mode"><label id="lbID">@item.JOB_ID</label></span>
                                    <input type="text" id="job_id" value="@item.JOB_ID" class="edit-mode"/></text>,
                             style:"col2Width"       ),
                grid.Column(columnName:"JOB_TITLE", header:"Job Title", 
                            format:@<text><span class="display-mode"><label id="lblName">@item.JOB_TITLE</label></span>
                                    <input type="text" id="job_title" value="@item.JOB_TITLE" class="edit-mode"/>
                                   </text>,
                            style: "col2Width"),
                grid.Column(columnName:"MIN_SALARY", header:"Minimum Salary",
                            format:@<text><span class="display-mode"><label id="lblName">@item.MIN_SALARY</label></span>
                                    <input type="text" id="min_salary" value="@item.MIN_SALARY" class="edit-mode" />
                                    </text>,
                            style: "col2Width"),
                grid.Column(columnName: "MAX_SALARY", header: "Maximum Salary",
                            format:@<text><span class="display-mode"><label id="lblName">@item.MAX_SALARY</label></span>
                            <input type="text" id="max_salary" value="@item.MAX_SALARY" class="edit-mode" />
                            </text>,
                            style: "col2Width"),
                grid.Column(header: "Action", 
                            format:@<text>
                                    <button class="edit-user display-mode">Edit</button>
                                    <button class="save-user edit-mode">Save</button>
                                    <button class="cancel-user edit-mode">Cancel</button>
                            </text>, style: "col1Width")

    ))
</div>
<script type="text/javascript">
    $(document).ready(function(){
        $('.edit-mode').hide();
    });
    $(function () {
        $('.edit-mode').hide();
        $('.edit-user, .cancel-user').on('click', function () {
            var tr = $(this).parents('tr:first');
            tr.find('.edit-mode, .display-mode').toggle();
        });

    $('.save-user').on('click', function () {
        var tr = $(this).parents('tr:first');
        var JobID = tr.find("#job_id").val();
        var JobTitle = tr.find("#job_title").val();
        var MinSalary = tr.find("#min_salary").val();
        var MaxSalary = tr.find("#max_salary").val();
        

        //Creating JOB JSON object
        var JOBModel =
        {
            "JOB_ID": JobID,
            "JOB_TITLE": JobTitle,
            "MIN_SALARY": MinSalary,
            "MAX_SALARY": MaxSalary
        };
        //Posting JOBModel object to controller's Update action method
        $.ajax({
            url: '/JOBs/Update',
            data: JSON.stringify(JOBModel),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                tr.find('.edit-mode, .display-mode').toggle();
                alert('Record updated Successfully!!');
            },
            error: function (xhr, status) {
                if (xhr.status != 0)
                    alert("Sorry unable to update record");
        
            }
        });
    });

        $('.edit-user').on('click', function () {
            var tr = $(this).parents('tr:first');
            var EmpID = tr.find("#EmpId").html();
            var EmpName = tr.find("#Name").val();
            var EmpDesignation = tr.find("#Designation").val();
            var EmpGender = tr.find("#Gender").val();
            var EmpCity = tr.find("#City").val();
            var EmpState = tr.find("#State").val();
            var EmpZip = tr.find("#Zip").val();

            tr.find("#lblName").text(EmpName);
            tr.find("#lblDesignation").text(EmpDesignation);
            tr.find("#lblGender").text(EmpGender);
            tr.find("#lblCity").text(EmpCity);
            tr.find("#lblState").text(EmpState);
            tr.find("#lblZip").text(EmpZip);
        });
    })
</script>
 
<style type="text/css">
    .edit-mode {
    }

    .edit-user {
    }

    .edit-user display-mode {
    }

    .save-user edit-mode {
    }

    .display-mode {
    }

    .cancel-user {
    }

    .webgrid-table {
        font-family: Arial,Helvetica,sans-serif;
        font-size: 14px;
        font-weight: normal;
        width: 750px;
        display: table;
        border-collapse: collapse;
        border: solid px #C5C5C5;
        background-color: white;
    }

    .webgrid-table td, th {
        border: 1px solid #C5C5C5;
        padding: 4px 7px 8px;
    }

    .webgrid-header, .webgrid-header a {
        background-color: #0094ff;
        color: #ffffff;
        text-align: left;
        text-decoration: none;
    }

    .webgrid-footer {
    }

    .webgrid-row-style {
        padding: 3px 7px 2px;
    }

    .webgrid-alternating-row {
        background-color: azure;
        padding: 3px 7px 2px;
    }

    .col1Width {
        width: 200px;
    }

    .col2Width {
        width: 220px;
    }
</style>

 

@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.JOB_TITLE)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MIN_SALARY)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MAX_SALARY)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.JOB_TITLE)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MIN_SALARY)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MAX_SALARY)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.JOB_ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.JOB_ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.JOB_ID })
        </td>
    </tr>
}

</table>*@
